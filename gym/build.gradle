plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
	id 'com.epages.restdocs-api-spec' version '0.11.4'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.4")
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.mariadb.jdbc:mariadb-java-client'

	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	//database
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client'

	// Spring Security 추가
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// jwt 추가
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'com.google.code.gson:gson:2.9.0'

//	implementation 'com.querydsl:querydsl-jpa'
//	implementation 'com.querydsl:querydsl-apt'

	testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.11.4'

//	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'

	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	//kafka
//	implementation 'org.springframework.cloud:spring-cloud-stream'
//	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
	implementation 'org.springframework.kafka:spring-kafka'

	//querydsl
	//implementation 'gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10'
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
	testCompileOnly 'junit:junit:4.12'
	testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.1.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

openapi3 {
	server = 'http://localhost:8080'
	title = 'User API'
	description = 'User Api Description'
	// tagDescriptionsPropertiesFile = 'src/docs/tag-descriptions.yaml'
	version = '0.1.0'
	format = 'yaml'
	copy {
		from "build/api-spec"
		into "src/main/resources/static/docs/"
	}
}

//querydsl 추가
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
//compileQuerydsl.doFirst {
//	if(file(querydslDir).exists() )
//		delete(file(querydslDir))
//}

//querydsl 추가 끝